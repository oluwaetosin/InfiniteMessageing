package com.example.infinitemessaging;

import java.util.ArrayList;
import java.util.List;

import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import com.infobip.push.PushNotificationManager;

import android.app.Activity;
import android.content.ClipData.Item;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;

public class SendRequest extends Activity {
	 String latitude = null;
	 String longitude = null;
	 LocationHelper location;
	  String request;
	  String deviceId;
	  EditText message;
	  Button   send;
	 
       @Override
    protected void onCreate(Bundle savedInstanceState) {
    	// TODO Auto-generated method stub
    	super.onCreate(savedInstanceState);
    	setContentView(R.layout.send_request);
    	 final PushNotificationManager manager = new PushNotificationManager(this);
         manager.initialize("1079560850569", "c415a5b35c4c", "0b109ff2008c");
    	send    = (Button) findViewById(R.id.button1);
    	message = (EditText) findViewById(R.id.editText1);
    	send.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				request  = message.getText().toString();
				deviceId = manager.getDeviceId();
				if(request.trim().equals("")){
					getLocation();
					Toast.makeText(SendRequest.this, "Message is Empty " , Toast.LENGTH_LONG).show();
					return ;
				}
				getLocation();
				sendRequestToUrl sendRequest = new sendRequestToUrl();
				sendRequest.execute(new String[]{request,"http://www.watershedcorporation.com/pushScripts/request.php",deviceId,latitude,longitude});
				message.setText("");
				Toast.makeText(SendRequest.this, "Request Sent", Toast.LENGTH_SHORT).show();
			}
		});
    }
       
     @Override
    public boolean onCreateOptionsMenu(Menu menu) {
    	// TODO Auto-generated method stub
    	 getMenuInflater().inflate(R.menu.send_request, menu);
    		return true;
     } 
     
    public boolean onOptionsItemSelected(MenuItem Item){
		switch(Item.getItemId()){
		case R.id.inbox:
			Intent intent = new Intent(getApplicationContext(), Inbox.class);
			startActivity(intent);
			finish();
		    break;
		  default:
			  return super.onOptionsItemSelected(Item);
		}	
    	return true;
    		 
    	 }
    
    public class sendRequestToUrl extends  AsyncTask<String, Void, String>{

		@Override
		protected String doInBackground(String... params) {
			// TODO Auto-generated method stub
			String request        = params[0];
			String url            = params[1];
			String deviceId       = params [2];
			String lat            = params[3];
			String lng            = params [4];
			HttpClient httpClient = new DefaultHttpClient();
			HttpPost   httpPost   = new HttpPost(url);
			try {
				List<NameValuePair> nameValuePair = new ArrayList<NameValuePair>(2);
				nameValuePair.add(new BasicNameValuePair("request", request));
				nameValuePair.add(new BasicNameValuePair("deviceId",deviceId));
				nameValuePair.add(new BasicNameValuePair("lat", lat));
				nameValuePair.add(new BasicNameValuePair("lng", lng));
				httpPost.setEntity(new UrlEncodedFormEntity(nameValuePair));
				httpClient.execute(httpPost);
			} catch (Exception e) {
				// TODO: handle exception
			}
			return null;
		}
    	
    }
    public void getLocation(){
    	 location = new LocationHelper(SendRequest.this);
    	 if(location.canGetLocation()){
    		 longitude =  String.valueOf(location.longitude);
    		 latitude  = String.valueOf(location.latitude);
    	 }
    }
    
    
   
}
